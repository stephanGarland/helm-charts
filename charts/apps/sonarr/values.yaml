generic-app:
  nameOverride: sonarr

  pods:
    # Can either be 'deployment', 'statefulset' or 'daemonset'
    controller: statefulset

    image:
      name: linuxserver/sonarr
      tag: 3.0.10
      pullPolicy: IfNotPresent

    replicas: 1

    livenessProbe:
      httpGet:
        path: /
        port: 443
      initialDelaySeconds: 10
    readinessProbe: {}

    resources:
      limits:
        memory: 2Gi
      requests:
        cpu: 1000m
        memory: 1Gi

    ports:
      - containerPort: 8989

    envFrom:
      - configMapRef:
         name: sonarr-cm

    volumes:
      - name: "sonarr-tv"
        nfs:
          path: "/export/tv"
          server: "192.168.1.202"

    volumeMounts:
      - name: "sonarr-config"
        mountPath: "/config"
      - name: "sonarr-tv"
        mountPath: "/tv"

    volumeClaimTemplates:
      # Defaults to app.fullname-config
      # nameOverride: ""
      # Defaults to ReadWriteOnce
      # accessModes: [ "ReadWriteMany" ]
      storageClassName: "longhorn-retain"
      # Defaults to 1Gi
      storageSize: "2Gi"

  service:
    enabled: true
    ports:
      - port: 80
        targetPort: 8989
        protocol: TCP
        name: http
    # Defaults to LoadBalancer
    # type: ClusterIP
    # Does not have a default value
    loadBalancerClass: tailscale

  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  configMaps:
    cm:
      PGID: "1000"
      PUID: "1000"
      TZ: "America/New_York"
      UMASK: "002"

